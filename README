 项目简介

本项目是一个以用户点评和商户信息为主要内容的本地生活服务平台，使用SpringBoot实现了登录、注册、签到等功能。项目特别注重利用Redis的特性解决各种业务场景中的问题。核心工作包括设计和实现缓存更新策略，解决缓存击穿和缓存穿透等问题，并通过Redisson实现分布式锁机制，解决优惠券超卖的线程安全问题。

 主要功能

1. **登录注册**：
   - 使用Redis存储验证码和token。
   - 通过自定义拦截器完成用户认证，并使用双重拦截器解决token刷新问题。

2. **用户权限的保存**：
   - 通过ThreadLocal配合拦截器进行token校验，判断用户是否处于登录状态。
   - 解决HTTP无状态问题，确保服务端能够记住用户信息。

3. **缓存一致性问题**：
   - 深入了解缓存一致性问题的常用解决方案。
   - 在系统中采用主动更新+超时剔除的缓存更新方案，满足较高的数据一致性要求。

4. **秒杀优惠券**：
   - 通过乐观锁解决库存超卖问题。
   - 使用Redisson分布式锁解决一人一单问题。

5. **秒杀性能优化**：
   - 使用消息队列（如RabbitMQ）和Lua脚本实现异步处理下单流程。
   - 将同步下单改为异步下单，优化秒杀业务流程，平均耗时从400多毫秒降低到100多毫秒。

6. **统计签到**：
   - 使用Redis的Bitmap数据类型进行签到和统计功能。
   - 相较于MySQL存储方式，更加节省内存空间。

 解决方案

- **缓存穿透、缓存击穿问题的解决**：
  - 使用缓存更新策略和防护措施，确保缓存的高效性和稳定性。
  - 了解并实施解决缓存击穿、穿透及雪崩的多种方案。
